# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# NC_SHP_IDW_EXCEL_FIX.py
# Created on: 2021-06-21 13:20:07.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Import
import arcpy
import datetime
import time

# Get Time
named_tuple = time.localtime() # get struct_time
time_string = time.strftime("%j%H%M%S", named_tuple)

# Check out any necessary licenses
arcpy.CheckOutExtension("spatial")
 
# Initial Looping
a=0
while a <10:

# Local variables:
    NC = "A:\\YUDI\\Prima\\DIKLATIKLIM\\PYTHONSCRIPT\\dataexcel\\GSMaP_202106100"+str(a)+"00.nc"
    SHP = "A:\\YUDI\\Prima\\DIKLATIKLIM\\jumat\\KALTIMFIXt.shp"
    tesshp = "A:\\YUDI\\Prima\\DIKLATIKLIM\\PYTHONSCRIPT\\tesshp"
    rainrate_Layer = "rainrate"
    Extract = "A:\\YUDI\\Prima\\DIKLATIKLIM\\PYTHONSCRIPT\\New File Geodatabase.gdb\\Extract"+time_string
    Raster = "A:\\YUDI\\Prima\\DIKLATIKLIM\\PYTHONSCRIPT\\New File Geodatabase.gdb\\Raster"+time_string
    Raster_SpatialJoin = "A:\\YUDI\\Prima\\DIKLATIKLIM\\PYTHONSCRIPT\\New File Geodatabase.gdb\\Raster_SpatialJoin"+time_string
    Excel_Table = "A:\\YUDI\\Prima\\DIKLATIKLIM\\PYTHONSCRIPT\\scratch\\Table06100"+str(a)+"00.xls"
    Idw_Raster = "A:\\YUDI\\Prima\\DIKLATIKLIM\\PYTHONSCRIPT\\New File Geodatabase.gdb\\Idw_Raster"+time_string

# Process: Make NetCDF Raster Layer
    arcpy.MakeNetCDFRasterLayer_md(NC, "rainrate", "longitude", "latitude", rainrate_Layer, "", "", "BY_VALUE")

# Process: Extract by Mask
    arcpy.gp.ExtractByMask_sa(rainrate_Layer, SHP, Extract)

# Process: Raster to Point
    arcpy.RasterToPoint_conversion(Extract, Raster, "Value")

# Process: Spatial Join
    arcpy.SpatialJoin_analysis(Raster, SHP, Raster_SpatialJoin, "JOIN_ONE_TO_ONE", "KEEP_COMMON", "Rainrate \"Rainrate\" true true false 0 Float 0 0 ,First,#,A:\\YUDI\\Prima\\DIKLATIKLIM\\PYTHONSCRIPT\\New File Geodatabase.gdb\\Raster,GRID_CODE,-1,-1;NAMA_KAB \"NAMA_KAB\" true true false 25 Text 0 0 ,First,#,A:\\YUDI\\Prima\\DIKLATIKLIM\\jumat\\KALTIMFIXt.shp,NAMA_KAB,-1,-1;NAMA_PROP \"NAMA_PROP\" true true false 20 Text 0 0 ,First,#,A:\\YUDI\\Prima\\DIKLATIKLIM\\jumat\\KALTIMFIXt.shp,NAMA_PROP,-1,-1;KODE_KAB \"KODE_KAB\" true true false 20 Text 0 0 ,First,#,A:\\YUDI\\Prima\\DIKLATIKLIM\\jumat\\KALTIMFIXt.shp,KODE_KAB,-1,-1;KODE_PROP \"KODE_PROP\" true true false 20 Text 0 0 ,First,#,A:\\YUDI\\Prima\\DIKLATIKLIM\\jumat\\KALTIMFIXt.shp,KODE_PROP,-1,-1;PROV \"PROV\" true true false 20 Text 0 0 ,First,#,A:\\YUDI\\Prima\\DIKLATIKLIM\\jumat\\KALTIMFIXt.shp,PROV,-1,-1;KAB \"KAB\" true true false 20 Text 0 0 ,First,#,A:\\YUDI\\Prima\\DIKLATIKLIM\\jumat\\KALTIMFIXt.shp,KAB,-1,-1;PROV_CODE \"PROV_CODE\" true true false 20 Text 0 0 ,First,#,A:\\YUDI\\Prima\\DIKLATIKLIM\\jumat\\KALTIMFIXt.shp,PROV_CODE,-1,-1;KAB_CODE \"KAB_CODE\" true true false 20 Text 0 0 ,First,#,A:\\YUDI\\Prima\\DIKLATIKLIM\\jumat\\KALTIMFIXt.shp,KAB_CODE,-1,-1", "INTERSECT", "", "")

# Process: Feature Class To Shapefile (multiple)
    arcpy.FeatureClassToShapefile_conversion(Raster_SpatialJoin, tesshp)

# Process: Table To Excel
    arcpy.TableToExcel_conversion(Raster_SpatialJoin, Excel_Table, "NAME", "CODE")

# Process: IDW
    arcpy.gp.Idw_sa(Raster_SpatialJoin, "Rainrate", Idw_Raster, "0.02007493308", "2", "VARIABLE 12", "")

# Monitoring and Increment
    print(time.ctime()+" Export Table06100"+str(a)+"00.xls")
    a=a+1

#Footer
print("Proses Selesai")
